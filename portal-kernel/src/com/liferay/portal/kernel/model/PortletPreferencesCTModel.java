/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.portal.kernel.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.service.persistence.PortletPreferencesCTPK;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the PortletPreferencesCT service. Represents a row in the &quot;PortletPreferencesCT&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.liferay.portal.model.impl.PortletPreferencesCTModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.liferay.portal.model.impl.PortletPreferencesCTImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see PortletPreferencesCT
 * @generated
 */
@ProviderType
public interface PortletPreferencesCTModel
	extends BaseModel<PortletPreferencesCT>, MVCCModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a portlet preferences ct model instance should use the {@link PortletPreferencesCT} interface instead.
	 */

	/**
	 * Returns the primary key of this portlet preferences ct.
	 *
	 * @return the primary key of this portlet preferences ct
	 */
	public PortletPreferencesCTPK getPrimaryKey();

	/**
	 * Sets the primary key of this portlet preferences ct.
	 *
	 * @param primaryKey the primary key of this portlet preferences ct
	 */
	public void setPrimaryKey(PortletPreferencesCTPK primaryKey);

	/**
	 * Returns the mvcc version of this portlet preferences ct.
	 *
	 * @return the mvcc version of this portlet preferences ct
	 */
	@Override
	public long getMvccVersion();

	/**
	 * Sets the mvcc version of this portlet preferences ct.
	 *
	 * @param mvccVersion the mvcc version of this portlet preferences ct
	 */
	@Override
	public void setMvccVersion(long mvccVersion);

	/**
	 * Returns the class pk of this portlet preferences ct.
	 *
	 * @return the class pk of this portlet preferences ct
	 */
	public long getClassPK();

	/**
	 * Sets the class pk of this portlet preferences ct.
	 *
	 * @param classPK the class pk of this portlet preferences ct
	 */
	public void setClassPK(long classPK);

	/**
	 * Returns the ct collection ID of this portlet preferences ct.
	 *
	 * @return the ct collection ID of this portlet preferences ct
	 */
	public long getCtCollectionId();

	/**
	 * Sets the ct collection ID of this portlet preferences ct.
	 *
	 * @param ctCollectionId the ct collection ID of this portlet preferences ct
	 */
	public void setCtCollectionId(long ctCollectionId);

	/**
	 * Returns the preferences of this portlet preferences ct.
	 *
	 * @return the preferences of this portlet preferences ct
	 */
	@AutoEscape
	public String getPreferences();

	/**
	 * Sets the preferences of this portlet preferences ct.
	 *
	 * @param preferences the preferences of this portlet preferences ct
	 */
	public void setPreferences(String preferences);

}